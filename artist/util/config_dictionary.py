power_plant_position = "position"
"""Key to access the power plant position."""

target_area_geometry = "geometry"
"""Key to access the target area type."""
target_area_position_center = "position_center"
"""Key to access the target area center position."""
target_area_normal_vector = "normal_vector"
"""Key to access the target area normal vector."""
target_area_plane_e = "plane_e"
"""Key to access the target area plane in the east direction."""
target_area_plane_u = "plane_u"
"""Key to access the target area plane in the up direction."""
target_area_curvature_e = "curvature_e"
"""Key to access the target area curvature in the east direction."""
target_area_curvature_u = "curvature_u"
"""Key to access the target area curvature in the up direction."""
target_area_receiver = "receiver"
"""Key used to define that the target area is a receiver."""
target_area_type_planar = "planar"
"""Key used to define that a planar target area type is used."""

light_source_type = "type"
"""Key to access the light source type."""
sun_key = "sun"
"""Key to define that the light source type is a sun."""
light_source_number_of_rays = "number_of_rays"
"""Key to access the number of rays for the light source."""
light_source_distribution_parameters = "distribution_parameters"
"""Key to access the light source distribution parameters."""
light_source_distribution_type = "distribution_type"
"""Key to access the light source distribution type."""
light_source_distribution_is_normal = "normal"
"""Key to define that the light source distribution is modelled by a multivariate normal distribution."""
light_source_mean = "mean"
"""Key to access the mean for the light source distribution."""
light_source_covariance = "covariance"
"""Key to access the covariance for the light source distribution."""

facets_key = "facets"
"""Key to access the facets."""
facet_control_points = "control_points"
"""Key to access the facet control points."""
facet_degrees = "degrees"
"""Key to access the facet degrees in the east and north direction."""
facet_number_of_evaluation_points = "number_of_evaluation_points"
"""Key to access the facet number of evaluation points in the east and north direction."""
facets_translation_vector = "position"
"""Key to access the translation vector indicating the position of the facet relative to the center of the heliostat."""
facets_canting = "canting"
"""Key to access the facet canting in the east and north direction."""

first_joint_translation_e = "first_joint_translation_e"
"""Key to access the kinematic first joint translation in the east direction."""
first_joint_translation_n = "first_joint_translation_n"
"""Key to access the kinematic first joint translation in the north direction."""
first_joint_translation_u = "first_joint_translation_u"
"""Key to access the kinematic first joint translation in the up direction."""
first_joint_tilt_n = "first_joint_tilt_n"
"""Key to access the kinematic first joint tilt in the north direction."""
first_joint_tilt_u = "first_joint_tilt_u"
"""Key to access the kinematic first joint tilt in the up direction."""
second_joint_translation_e = "second_joint_translation_e"
"""Key to access the kinematic second joint translation in the east direction."""
second_joint_translation_n = "second_joint_translation_n"
"""Key to access the kinematic second joint translation in the north direction."""
second_joint_translation_u = "second_joint_translation_u"
"""Key to access the kinematic second joint translation in the up direction."""
second_joint_tilt_e = "second_joint_tilt_e"
"""Key to access the kinematic second joint tilt in the east direction."""
second_joint_tilt_n = "second_joint_tilt_n"
"""Key to access the kinematic second joint tilt in the north direction."""
concentrator_translation_e = "concentrator_translation_e"
"""Key to access the kinematic concentrator translation in the east direction."""
concentrator_translation_n = "concentrator_translation_u"
"""Key to access the kinematic concentrator translation in the north direction."""
concentrator_translation_u = "concentrator_translation_n"
"""Key to access the kinematic concentrator translation in the up direction."""

kinematic_type = "type"
"""Key to access the kinematic type."""
rigid_body_key = "rigid_body"
"""Key to define that the rigid body kinematic is used as a kinematic type."""
rigid_body_number_of_translation_deviation_parameters = 9
"""Number of translation deviation parameters used in the rigid body kinematic."""
rigid_body_number_of_rotation_deviation_parameters = 4
"""Number of rotation deviation parameters used in the rigid body kinematic."""
rigid_body_number_of_actuators = 2
"""Number of actuators used in the rigid body kinematic."""
number_of_linear_actuator_parameters = 9
"""Number of actuator parameters for linear actuators."""
number_of_ideal_actuator_parameters = 4
"""Number of actuator parameters for ideal actuators."""
kinematic_initial_orientation = "initial_orientation"
"""Key to access the initial orientation."""
kinematic_deviations = "deviations"
"""Key to access the kinematic deviations."""
translation_deviations = "translation_deviations"
"""Key to access the kinematic translation deviations."""
rotation_deviations = "rotation_deviations"
"""Key to access the kinematic rotation deviations."""

actuator_clockwise_axis_movement = "clockwise_axis_movement"
"""Key to access the actuator clockwise parameter."""
actuator_increment = "increment"
"""Key to access the actuator increment parameter."""
actuator_min_max_motor_positions = "min_max_motor_positions"
"""Key to access the minimum and maximum motor positions of an actuator."""
actuator_initial_stroke_length = "initial_stroke_length"
"""Key to access the actuator initial stroke length parameter."""
actuator_offset = "offset"
"""Key to access the actuator offset parameter."""
actuator_pivot_radius = "pivot_radius"
"""Key to access the actuator pivot radius parameter."""
actuator_initial_angle = "initial_angle"
"""Key to access the actuator initial angle parameter."""

actuator_type_key = "type"
"""Key to access the actuator type."""
actuator_parameters_key = "parameters"
"""Key to access the actuator parameters."""
ideal_actuator_key = "ideal"
"""Key defining that the actuator used is an ideal actuator."""
ideal_actuator_int = 1
"""Int defining that the actuator used is an ideal actuator."""
linear_actuator_key = "linear"
"""Int defining that the actuator used is a linear actuator."""
linear_actuator_int = 0


surface_prototype_key = "surface"
"""Key to access the surface prototype."""
kinematic_prototype_key = "kinematic"
"""Key to access the kinematic prototype."""
actuators_prototype_key = "actuator"
"""Key to access the actuators prototype."""

heliostat_id = "id"
"""Key to access the heliostat ID."""
heliostat_position = "position"
"""Key to access the heliostat position."""
heliostat_aim_point = "aim_point"
"""Key to access the heliostat aim point."""
heliostat_surface_key = "surface"
"""Key to access the heliostat surface."""
heliostat_kinematic_key = "kinematic"
"""Key to access the heliostat kinematic."""
heliostat_actuator_key = "actuator"
"""Key to access the heliostat actuator."""

prototype_key = "prototypes"
"""Key to access the prototypes."""
power_plant_key = "power_plant"
"""Key to access the power plant."""
target_area_key = "target_areas"
"""Key to access the target areas."""
light_source_key = "lightsources"
"""Key to access the light sources."""
heliostat_key = "heliostats"
"""Key to access the heliostats."""

fit_nurbs_from_points = "point_cloud"
"""Defines that the NURBS should be learnt using a point cloud."""
fit_nurbs_from_normals = "deflectometry"
"""Defines that the NURBS should be learnt using deflectometry data."""

kinematic_reconstruction_raytracing = "raytracing"
"""Defines that the kinematic reconstructor uses ray tracing."""

names = "names"
"""Key to access heliostat names."""
positions = "positions"
"""Key to access heliostat positions."""
aim_points = "aim_points"
"""Key to access heliostat aim_points."""
surface_points = "surface_points"
"""Key to access surface points."""
surface_normals = "surface_normals"
"""Key to access surface normals."""
initial_orientations = "initial_orientations"
"""Key to access initial orientations of heliostats."""
kinematic_deviation_parameters = "kinematic_deviation_parameters"
"""Key to access kinematic deviation parameters of heliostats."""
actuator_parameters_non_optimizable = "actuator_parameters_non_optimizable"
"""Key to access non-optimizable actuator parameters of heliostats."""
actuator_parameters_optimizable = "actuator_parameters_optimizable"
"""Key to access optimizable actuator parameters of heliostats."""

heliostat_group_type = "type"
"""Key to access the heliostat group type."""
paint_increment = "increment"
"""Key to access the actuators increment in a ``PAINT`` heliostat_properties.json file."""
paint_initial_stroke_length = "initial_stroke_length"
"""Key to access the actuators initial stroke length in a ``PAINT`` heliostat_properties.json file."""
paint_offset = "offset"
"""Key to access the actuators offset in a ``PAINT`` heliostat_properties.json file."""
paint_pivot_radius = "pivot_radius"
"""Key to access the actuators pivot radius in a ``PAINT`` heliostat_properties.json file."""
paint_initial_angle = "initial_angle"
"""Key to access the actuators initial angle in a ``PAINT`` heliostat_properties.json file."""
paint_actuator_type = "type_axis"
"""Key to access the actuator type in a ``PAINT`` heliostat_properties.json file."""
paint_clockwise_axis_movement = "clockwise_axis_movement"
"""Key to access the actuators axis movement direction in a ``PAINT`` heliostat_properties.json file."""
paint_min_increment = "min_increment"
"""Key to access the actuators minimum increment in a ``PAINT`` heliostat_properties.json file."""
paint_max_increment = "max_increment"
"""Key to access the actuators maximum increment in a ``PAINT`` heliostat_properties.json file."""

linux = "Linux"
"""Key to access the Linux OS name."""
windows = "Windows"
"""Key to access the Windows OS name."""
mac = "Darwin"
"""Key to access the Mac OS name."""

number_of_heliostat_groups = "number_of_heliostat_groups"
"""Key to access the number of heliostat groups for distributed setup."""

utis_crop_width = 6
"""Key to access the crop width used in utis."""
utis_crop_height = 6
"""Key to access the crop height used in utis."""

data_parser = "data_parser"
"""Key to access a data parser."""
paint = "paint"
"""Key to access the name ``paint``."""
heliostat_data_mapping = "heliostat_data_mapping"
"""Key to access a heliostat data mapping."""

initial_learning_rate = "initial_learning_rate"
"""Key to access the initial learning rate of an optimizer."""
tolerance = "tolerance"
"""Key to access the tolerance of an optimization."""
max_epoch = "max_epoch"
"""Key to access the maximum epoch number of an optimization."""
log_step = "log_step"
"""Key to access the step for log statements of an optimization."""
early_stopping_delta = "early_stopping_delta"
"""Key to access the early stopping delta of an optimization."""
early_stopping_patience = "early_stopping_patience"
"""Key to access the early stopping patience of an optimization."""
scheduler = "scheduler"
"""Key to access the name of a learning rate scheduler."""
scheduler_parameters = "scheduler_parameters"
"""Key to access the learning rate scheduler parameters."""
exponential = "exponential"
"""Key to access an exponential learning rate scheduler."""
cyclic = "cyclic"
"""Key to access a cyclic learning rate scheduler."""
reduce_on_plateau = "reduce_on_plateau"
"""Key to access a reduce on plateau learning rate scheduler."""
gamma = "gamma"
"""Key to access gamma of an exponential learning rate scheduler."""
min = "min"
"""Key to access the minimum learning rate of a learning rate scheduler."""
max = "max"
"""Key to access the maximum learning rate of a learning rate scheduler."""
step_size_up = "step_size_up"
"""Key to access the step size up parameter of a cyclic learning rate scheduler."""
reduce_factor = "reduce_factor"
"""Key to access the reduce factor of a reduce on plateau learning rate scheduler."""
patience = "patience"
"""Key to access the patience of a reduce on plateau learning rate scheduler."""
threshold = "threshold"
"""Key to access the threshold of a reduce on plateau learning rate scheduler."""
cooldown = "cooldown"
"""Key to access the cooldown parameter of a reduce on plateau learning rate scheduler."""
regularizers = "regularizers"
"""Key to access regularizers."""
regularization_callable = "regularization_callable"
"""Key to access the callable name of a regularizer."""
weight = "weight"
"""Key to access the weight of a regularizer."""
regularizers_parameters = "regularizers_parameters"
"""Key to access the parameters of a regularizer."""
vector_loss = "vector_loss"
"""Key to access the vector loss function."""
total_variation_loss = "total_variation_loss"
"""Key to access the total variation loss function."""
ideal_surface_loss = "ideal_surface_loss"
"""Key to access the ideal surface loss regularizer."""
total_variation_loss_points = "total_variation_loss_points"
"""Key to access the total variation loss regularizer for surface points."""
total_variation_loss_normals = "total_variation_loss_normals"
"""Key to access the total variation loss regularizer for surface normals."""
number_of_neighbors = "number_of_neighbors"
"""Key to access the number of neighbors parameter of a regularizer."""
sigma = "sigma"
"""Key to access the sigma parameter of a regularizer."""

device = "device"
"""Key to access the device."""
is_distributed = "is_distributed"
"""Flag for the distributed setup."""
is_nested = "is_nested"
"""Flag for the nested distributed setup."""
rank = "rank"
"""Key to access the rank in a ddp setup."""
world_size = "world_size"
"""Key to access the world size in a ddp setup."""
process_subgroup = "process_subgroup"
"""Key to access the process subgroup in a ddp setup."""
groups_to_ranks_mapping = "groups_to_ranks_mapping"
"""Key to access the mapping from heliostat groups to ranks."""
heliostat_group_rank = "heliostat_group_rank"
"""Key to access the rank within a process subgroups."""
heliostat_group_world_size = "heliostat_group_world_size"
"""Key to access the world size within a process subgroups."""
ranks_to_groups_mapping = "ranks_to_groups_mapping"
"""Key to access the mapping from ranks to heliostat groups."""

bitmap_normalizer = 255.0
"""Constant to normalize bitmaps."""
bitmap_resolution = 256
"""Constant for the bitmap resolution."""
nurbs_degrees = 2
"""Defines the degrees for nurbs tensors."""
control_point_dimension = 3
"""Defines the dimensions for control points."""
canting_direction_dimension = 2
"""Defines the dimensions for canting direction tensor."""
rigid_body_motor_position_dimension = 2
"""Defines the dimensions for rigid body motor position tensor."""
